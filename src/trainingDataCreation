import cv2
import numpy as np

#helper function to shrink image to workable size
def imgShrink(img):
    imgsmall=cv2.resize(img,(800,600))
    return(imgsmall)
    
def Main():
    #Import images as grayscale with the 0
    img1 = cv2.imread('CS4980/CharacterTest2.jpg',0)
    img2 = cv2.imread('CS4980/CharacterTest3.jpg',0)
    #Shrink Image
    img1 = imgShrink(img1)
    img2 = imgShrink(img2)
    #Create new orb to find key points in image
    orb = cv2.ORB_create(nfeatures=1000)
    
    kp1, des1 = orb.detectAndCompute(img1,None)
    kp2,des2 = orb.detectAndCompute(img2,None)
    
    bf = cv2.BFMatcher()
    matches = bf.knnMatch(des1,des2,k=2)
    good = []
    for m,n in matches:
        if m.distance < 0.75*n.distance:
            good.append([m])
    print(len(good))        
    img3 = cv2.drawMatchesKnn(img1,kp1,img2,kp2,good,None,flags=2)
   
    
    
    #imgKp1 = cv2.drawKeypoints(img1,kp1,None)
    #imgKp2 = cv2.drawKeypoints(img2,kp2,None)
    cv2.imshow("img1",img1)
    cv2.imshow("img2",img2)
    cv2.imshow("img3",img3)
    
   # cv2.imshow('Kp1',imgKp1)
   # cv2.imshow('Kp2',imgKp2)
    cv2.waitKey(0)
    
    
   
    
    return
Main()